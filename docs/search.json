[
  {
    "objectID": "visualization.html",
    "href": "visualization.html",
    "title": "5  Visualizations",
    "section": "",
    "text": "This is a very helpful tool for finding out the best suited chart type for a data visualization of a given data structure:"
  },
  {
    "objectID": "index.html#content",
    "href": "index.html#content",
    "title": "Applied Programming for Geosciences",
    "section": "Content",
    "text": "Content\nWelcome to Applied R Programming for Geoscience — From Data Cleaning to Publishing! This online book contains the material for the corresponding R teaching course. The content of this course focusses on showing the capabilities of programming languages (in this cas R) for every task throughout most common in research project workflows: starting with\n\ndata import, cleaning and wrangling,\nanalysis,\nhigh quality visualizations to\nwriting manuscripts for peer-reviewed journal publishing.\n\nall done in a single free and open-source environment. Due to the constrained time, this course is not meant to be a comprehensive programming with R introductory course and therefore, will not go into details of each of the mentioned steps. It will rather show that all this can be done in R. I hope that seeing the advantages of it will encourage all participants to further keep learning programming and applying all the useful tools that come with it. As compensation, this book provides hints to online resources that help to get a foot into the door of improving R programming skills."
  },
  {
    "objectID": "index.html#acknowledgements",
    "href": "index.html#acknowledgements",
    "title": "Applied Programming for Geosciences",
    "section": "Acknowledgements",
    "text": "Acknowledgements"
  },
  {
    "objectID": "intro.html#motivation",
    "href": "intro.html#motivation",
    "title": "1  Introduction",
    "section": "1.1 Motivation",
    "text": "1.1 Motivation\nDuring my last few years as early career scientist in hydrogeology, I stumbled about this again and again: Reproducibility! Reproducibility in science! It is not something that students get teached really at university. But reproducibility actually should be a fundamental principle in research. And who hasn’t faced a situation where you wanted to repeat or adapt parts of someone others methods and you simply failed. You failed, either because the methods weren’t explained well enough or the analysis was done in a proprietary software or a software with graphical user interface (e.g. QGIS, FEFLOW, GeODIN) or the source code was not attached to the article. And reproducibility is a big issue throughout all scientific disciplines and its lack has been also studied for many years. Not really surprisingly, there are concepts and tools for ensuring reproducibility for many decades already. The most important concept is literate programming. Literate programming is the idea of combining code of a programming language, generated figures and tables by this code together with descriptive text, all in one script. One important consequence is that after you make changes to this script your analysis, figures and results are always up-to-date. Besides this, there are many other advantages when sticking to this concept and its tools. In this course, we will use tools that follow this basic concept of literate programming. Finally, I’m convinced that literate programming should be become a default tool in research whereever it’s possible.\n\n\n\n\n\nArtwork by @allison_horst."
  },
  {
    "objectID": "intro.html#readership-who-is-this-for",
    "href": "intro.html#readership-who-is-this-for",
    "title": "1  Introduction",
    "section": "1.2 Readership (who is this for?)",
    "text": "1.2 Readership (who is this for?)\nThis course or book is meant for anybody who is\n\ninterested in learning essential tools for data science\ninterested in state-of-the-art methods for reproducibility in science\nwith or without prior knowledge of programming in general or R (although it wouldn’t hurt of course)"
  },
  {
    "objectID": "intro.html#about-me",
    "href": "intro.html#about-me",
    "title": "1  Introduction",
    "section": "1.3 About Me",
    "text": "1.3 About Me\nI am working as a researcher in the field of machine learning and hydrogeology at the Federal Institute for Geoscience and Natural Resources (BGR). My projects include modelling groundwater quality parameters for producing maps as well as modelling groundwater level time series for making predictions. For this purpose I startet learning R mainly and a little bit Python a few years ago. Besides this, I enjoy using R for making data visualizations and teaching R and its capabilities to others."
  },
  {
    "objectID": "rbasics.html#overview-and-terms",
    "href": "rbasics.html#overview-and-terms",
    "title": "2  R Basics",
    "section": "2.1 Overview and Terms",
    "text": "2.1 Overview and Terms\nThere are some terms that you will read or hear many times when programming (in R). I’ve listed some of the most important terms, so you can easily distinguish them and look them up.\n\n[R Basics]\n“Base R”\nFunctions\nPackages\nVignette\nquarto\nrmarkdown\nRStudio\nCRAN\ngit\ngithub\n\n\n2.1.1 “Base R”\nWhen you read or hear about “base R”, people mean a way of coding that only uses functions that are coming with the pure R installation. This means that no extra package needs to be installed to run some code. The opposite to coding in base R would be to make use of many packages that need to be downloaded and installed. Depending on what you want to achieve, the former or the latter or a compromise between them are best suited. If you want to write a package, it’s generally a good practice to write as much base R code as possible to reduce the number of packages that your package depends on. On the contrary, e.g. if you want to write readable scripts for specific data analysis, using packages for different tasks is very helpful. Me for example, I really enjoy coding using the ‘tidyverse’ packages.\n\n\n2.1.2 Functions\nFunctions are an essential part of programming, because they apply some processing to your data or objects. But they also help you to keep your code readable, organised and to avoid repitions. There are functions to simply paste two strings together to a single string, functions to generate a plot or even functions to train a complex model based on some input data. Functions can be written or defined by yourself or they are part of a package that you want to use.\n\n\n2.1.3 Packages\nA package is a collection of functions that are relevant to achieve a specific task. For example, the raster package contains many useful functions to handle spatial raster data like reading, processing and saving. Therefore, a package can be seen as a toolboc that contains tools for specific tasks. Some packages contain a single function, others contain a single dataset. Yes, packages can also contain datasets. In order to use packages, they need to be, downloaded and installed using the function\n\ninstall.packages(\"<package name>\")\n\nAND loaded using\n\nlibrary(\"<package name>\")\n\nIt is also possible to only load a subset of functions from a package using argument exclude or include.only\n\nlibrary(\"<package name>\", include.only = \"function name\")\n\nor the import package.\n\n\n2.1.4 Vignette\nA vignette is a guide or a introduction to a package in form of a website. It showcases one or more start to end examples of how the package can be used to achieve a specific task. It also shows a list of all functions of that package. Because how should you know about a function if you don’t know its name or that it exists. It also documents changes that where made between different package versions. Many existing packages have a vignette and its good practice to provide a vignette.\n\n\n\nVignette of the `dplyr` package as example"
  },
  {
    "objectID": "rbasics.html#data-types",
    "href": "rbasics.html#data-types",
    "title": "2  R Basics",
    "section": "2.2 Data types",
    "text": "2.2 Data types\ntext."
  },
  {
    "objectID": "rbasics.html#further-resources",
    "href": "rbasics.html#further-resources",
    "title": "2  R Basics",
    "section": "2.3 Further Resources",
    "text": "2.3 Further Resources\nIn the following, some important resources are provided for different purposes such as getting started with programming in R, doing more sophisticated stuff, related topics to best-practices in programming etc.\n\n2.3.1 Online Books\n\nLearning fundamental programming in R for data science with the tidyverse meta-package:R for Data Science | by Hadley Wickham and Garret Grolemund\nIntroduction into R:ModernDive | by Chester Ismay and Albert Y. Kim\nIntroduction into R:R in Action | by Robert I. Kabacoff (only partially available for free)\nAdvanced R programming:Advanced R | by Hadley Wickham\nIn-depth best practices for efficient R programming:Efficient R programming | by Colin Gillespie and Robin Lovelace\nWrangling, analyzing, and vizualising geo data:Geocomputation with R | by Robin Lovelace, Jakub Nowosad and Jannes Muenchow\nHandling spatial data in R:Spatial Data Science | by Edzer Pebesma and Roger Bivand\nAll you need to know about R with git and github:Happy Git and GitHub for the useR | by Jenny Bryan\nBasics of machine learning in R using the tidymodels meta-package:Tidy Modeling with R | by Max Kuhn and Julia Silge\nIntroduction and in-depth knowledge for writing R packages:R Packages | by Hadley Wickham and Jenny Bryan\nBasics of web scraping with R:Web Scraping with R | by Steve Pittard\nIntroduction into R and mixed topics:STAT 545 | by Jenny Bryan\nCollection of R resources:Big Book of R | by Oscar Baruffa\n\n\n\n2.3.2 Hands On Exercises — Learning R through Challenges and small Projects\nFor speeding up the learning process it is more important to practise rather than reading books. There are many great places in the internet where you can find smaller and bigger data science challenges and projects. I really recommend to visit those places and just learn by directly solving tasks. Most important ones are:\n\nR Bootcamp\nDatascienceBox\nKaggle\nTidyTuesday and #tidytuesday\nAdventOfCode and #AdventOfCode\n30DayMapChallenge\n\n\n\n2.3.3 Cheatsheets\nCheatsheets are very condensed summaries of a documentation regarding single R packages or focussing on a specific functionality. They can be compared with those sheets students might take with them when writting a test. A quite comprehensive collection of cheatsheets can be found at the Posit Website here. Some important and basic ones are\n\nRstudio IDE\nGit + GitHub\nBase R\nData Wrangling\nPlotting with `ggplot` package\nSpatial data with `sf` package\n\n\n\n2.3.4 Community\nThe R community is a very friendly and supportive community. Most important packages have great documentations for learning new R packages and frameworks. The R community has an extraordinary sense of sharing knowledge and experiences. Important platforms for getting engaged with the R community but also for getting help with questions, issues and bugs are\n\nStackoverflow for getting help with questions\nPosit community forum (formerly Rstudio) for getting help with questions\nTwitter with #rstats for keeping track of latest developments, tips, tricks and getting in touch with the active R community members\nMastodon with #rstats, same same\nGithub for getting help with bugs, getting to know the developers behind packages or simply hosting and versioning your own code\nR Ladies each one teach one meet-ups\n\n\n\n2.3.5 Websites\n\nThe R Graph Gallery a sorted collection of charts made with R for inspiration\nFree Resources for Learning R a comprehensive list of free online material\nRdatasets an interactive list of datasets included in R packages"
  },
  {
    "objectID": "data.html#import",
    "href": "data.html#import",
    "title": "3  The Data",
    "section": "3.1 Import",
    "text": "3.1 Import"
  },
  {
    "objectID": "data.html#cleaning",
    "href": "data.html#cleaning",
    "title": "3  The Data",
    "section": "3.2 Cleaning",
    "text": "3.2 Cleaning"
  },
  {
    "objectID": "data.html#imputation",
    "href": "data.html#imputation",
    "title": "3  The Data",
    "section": "3.3 Imputation",
    "text": "3.3 Imputation"
  },
  {
    "objectID": "data.html#wrangling",
    "href": "data.html#wrangling",
    "title": "3  The Data",
    "section": "3.4 Wrangling",
    "text": "3.4 Wrangling"
  },
  {
    "objectID": "intro.html#cartoon-by-allison-horst",
    "href": "intro.html#cartoon-by-allison-horst",
    "title": "1  Introduction",
    "section": "1.2 ",
    "text": "1.2 \n</center>"
  },
  {
    "objectID": "analysis.html#missing-data",
    "href": "analysis.html#missing-data",
    "title": "4  Exploratory Data Analysis",
    "section": "4.1 Missing Data",
    "text": "4.1 Missing Data"
  },
  {
    "objectID": "analysis.html#distributions-and-correlations",
    "href": "analysis.html#distributions-and-correlations",
    "title": "4  Exploratory Data Analysis",
    "section": "4.2 Distributions and Correlations",
    "text": "4.2 Distributions and Correlations"
  },
  {
    "objectID": "intro.html#who-is-this-book-for",
    "href": "intro.html#who-is-this-book-for",
    "title": "1  Introduction",
    "section": "1.2 Who is this book for?",
    "text": "1.2 Who is this book for?\nThis course or book is meant for anybody who is\n\na course participant\ninterested in learning essential tools for data science\ninterested in state-of-the-art methods for reproducibility in science\nwith or without prior knowledge of programming in general or R (although it wouldn’t hurt of course)"
  },
  {
    "objectID": "manuscriptwriting.html#import",
    "href": "manuscriptwriting.html#import",
    "title": "6  The Data",
    "section": "6.1 Import",
    "text": "6.1 Import"
  },
  {
    "objectID": "manuscriptwriting.html#cleaning",
    "href": "manuscriptwriting.html#cleaning",
    "title": "6  The Data",
    "section": "6.2 Cleaning",
    "text": "6.2 Cleaning"
  },
  {
    "objectID": "manuscriptwriting.html#imputation",
    "href": "manuscriptwriting.html#imputation",
    "title": "6  The Data",
    "section": "6.3 Imputation",
    "text": "6.3 Imputation"
  },
  {
    "objectID": "manuscriptwriting.html#wrangling",
    "href": "manuscriptwriting.html#wrangling",
    "title": "6  The Data",
    "section": "6.4 Wrangling",
    "text": "6.4 Wrangling"
  },
  {
    "objectID": "manuscriptwriting.html#output-formats",
    "href": "manuscriptwriting.html#output-formats",
    "title": "6  Literate Programming",
    "section": "6.1 Output formats",
    "text": "6.1 Output formats"
  },
  {
    "objectID": "manuscriptwriting.html#section",
    "href": "manuscriptwriting.html#section",
    "title": "6  Literate Programming",
    "section": "6.2 …",
    "text": "6.2 …"
  },
  {
    "objectID": "rbasics.html#vignette-of-the-dplyr-package-as-exampledata-types",
    "href": "rbasics.html#vignette-of-the-dplyr-package-as-exampledata-types",
    "title": "2  R Basics",
    "section": "2.2 Data types",
    "text": "2.2 Data types\ntext."
  }
]